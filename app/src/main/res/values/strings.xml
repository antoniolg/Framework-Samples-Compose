<resources>
    <string name="app_name">Framework Samples</string>

    <!-- Topics -->
    <string name="topic_broadcast_receivers">2.1 Broadcast receivers</string>
    <string name="topic_services">2.2 Servicios</string>
    <string name="topic_coroutines">2.3 Corrutinas</string>
    <string name="topic_notifications">2.4 Notificaciones</string>
    <string name="topic_persistence">2.5 Persistencia</string>
    <string name="topic_work_manager">2.6 Work Manager</string>
    <string name="topic_web_services">2.7 Web services</string>
    <string name="topic_fragments">2.8 Fragments</string>
    <string name="topic_location_maps">2.9 Location &amp; Maps</string>
    <string name="topic_styles_themes">2.10 Estilos y temas</string>

    <string name="not_implemented_yet">Aún no implementado</string>

    <!-- Broadcast Samples -->
    <string name="language_changed">Idioma cambiado a: %s</string>
    <string name="battery_sample_title">Monitor de Batería</string>
    <string name="battery_sample_description">Ejemplo de Broadcast Receiver dinámico que monitoriza el nivel de batería</string>
    <string name="custom_broadcast_sample_title">Broadcast Personalizado</string>
    <string name="custom_broadcast_sample_description">Ejemplo de cómo enviar y recibir broadcasts personalizados</string>
    <string name="battery_level">Nivel de batería: %.1f%%</string>
    <string name="battery_sample_instructions">Este ejemplo demuestra cómo usar un Broadcast Receiver dinámico para monitorizar el nivel de batería en tiempo real. El receiver se registra cuando la pantalla se crea y se desregistra cuando se destruye, siguiendo el ciclo de vida de la UI.</string>
    <string name="message_hint">Escribe un mensaje</string>
    <string name="send_broadcast">Enviar Broadcast</string>
    <string name="received_message">Mensaje recibido: %s</string>
    <string name="custom_broadcast_sample_instructions">Este ejemplo demuestra cómo enviar y recibir broadcasts personalizados de forma segura. El broadcast se envía con el package name de la aplicación y el receiver se registra con RECEIVER_NOT_EXPORTED para evitar que otras apps puedan interceptar los mensajes.</string>

    <!-- Service Samples -->
    <string name="download_service_title">Servicio de Descarga</string>
    <string name="download_service_description">Ejemplo de un servicio que simula la descarga de un archivo</string>
    <string name="bound_download_service_title">Servicio Enlazado de Descarga</string>
    <string name="bound_download_service_description">Ejemplo de un servicio enlazado que muestra el progreso de descarga en tiempo real</string>
    <string name="start_download">Iniciar Descarga</string>
    <string name="stop_download">Detener Descarga</string>
    <string name="url_hint">URL del archivo a descargar</string>
    <string name="download_started">Descarga iniciada: %s</string>
    <string name="download_stopped">Descarga detenida</string>
    <string name="download_progress">Descargando %1$s: %2$d%%</string>
    <string name="download_complete">Descarga completada: %s</string>
    <string name="service_started_message">Servicio iniciado con mensaje: %s</string>
    <string name="service_stopped">Servicio detenido</string>
    <string name="default_message">Mensaje por defecto</string>
    <string name="download_service_instructions">Este ejemplo demuestra un servicio que simula la descarga de un archivo. Puedes iniciar la descarga proporcionando una URL y detenerla en cualquier momento. El progreso de la descarga se muestra en el Logcat.</string>
    <string name="bound_download_service_instructions">Este ejemplo demuestra un servicio enlazado que simula la descarga de un archivo y muestra el progreso en tiempo real en la interfaz de usuario.</string>


    <!-- Coroutines Samples -->
    <string name="coroutines_title">Corrutinas en Android</string>
    <string name="coroutines_description">Ejemplo de uso de corrutinas para tareas en segundo plano</string>
    <string name="run_cpu_task">Ejecutar Tarea CPU</string>
    <string name="run_io_task">Ejecutar Tarea IO</string>
    <string name="cpu_task_result">Suma: %d</string>
    <string name="io_task_result">Datos obtenidos correctamente</string>
    <string name="coroutines_instructions">Este ejemplo demuestra el uso de corrutinas en Android para realizar tareas en segundo plano. La tarea CPU realiza un cálculo intensivo, mientras que la tarea IO simula una operación de entrada/salida con un retraso de 2 segundos.</string>
</resources>